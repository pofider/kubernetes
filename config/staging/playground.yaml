apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: playground-staging
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: playground-staging
    spec:
      containers:
      - name: playground-staging
        image: jsreport/playground:2.0.3
        imagePullPolicy: Always
        ports:
        - containerPort: 5488
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock-volume
        env:      
        - name: ip
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: stack
          value: "test"
        - name: extensions_mongodbStore_username
          value: "admin"            
        - name: extensions_mongodbStore_password
          valueFrom:
            secretKeyRef:
              name: mongo
              key: mongo.txt
        - name: extensions_mongodbStore_authDb
          value: "admin"
      volumes:
      - name: docker-sock-volume
        hostPath:        
          path: /var/run/docker.sock         
          type: File
---          
apiVersion: v1
kind: Service
metadata:
  name: playground-staging
  labels:
    app: playground-staging
spec:
  selector:
    app: playground-staging
  ports:
    - name: http
      port: 5488          
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: playground-staging-ingress
  annotations:    
    kubernetes.io/ingress.class: nginx   
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/limit-rps: "10"        
    nginx.ingress.kubernetes.io/server-snippet: |
      location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
      }    
spec:
  rules:  
  - host: staging.playground.jsreport.cloud
    http:  
      paths:
      - path: /
        backend:
          serviceName: playground-staging
          servicePort: 5488