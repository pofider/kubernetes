apiVersion: apps/v1
kind: Deployment
metadata:
  name: website-staging
spec:
  selector:
    matchLabels:
      app: website-staging
  replicas: 1
  template:
    metadata:
      labels:
        app: website-staging
    spec:
      containers:
      - name: website-staging
        image: jsreport/website:0.12.4
        imagePullPolicy: Always
        ports:
        - containerPort: 2000      
        volumeMounts:
        - mountPath: "/app/data"
          name: volume
        - name: website
          mountPath: /app/.env
          subPath: .env
          readOnly: true
        resources:
          limits:
            memory: "128Mi"
            cpu: "0.2"
          requests:
            cpu: "0"
            memory: "0"
        env:    
        - name: PORT
          value: "2000"
        - name: mongodb_address
          value: "mongodb"                
        - name: mongodb_username
          value: "admin"            
        - name: mongodb_password
          valueFrom:
            secretKeyRef:
              name: mongo
              key: mongo.txt
        - name: mongodb_authdb
          value: "admin"
      volumes:
      - name: volume
        persistentVolumeClaim:
          claimName: azurefile
      - name: website
        secret:
          secretName: website-staging-credentials  
          items:
          - key: websiteStagingCredentials.env
            path: .env
---          
apiVersion: v1
kind: Service
metadata:
  name: website-staging
  labels:
    app: website-staging
spec:
  selector:
    app: website-staging
  ports:
    - name: http
      port: 2000          
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: website-staging-ingress
  annotations:    
    kubernetes.io/ingress.class: nginx     
    nginx.ingress.kubernetes.io/limit-rps: "10"       
    nginx.ingress.kubernetes.io/server-snippet: |      
      location /robots.txt {
        add_header Content-Type text/plain;
        return 201 "User-agent: *\nDisallow: /\n";
      }     
spec:    
  rules:  
  - host: jsreport.cloud
    http:  
      paths:
      - path: /
        backend:
          serviceName: website-staging
          servicePort: 2000   
      