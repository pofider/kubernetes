apiVersion: apps/v1
kind: Deployment
metadata:
  name: janblaha-staging
spec:
  selector:
    matchLabels:
      app: janblaha-staging
  replicas: 1
  template:
    metadata:
      labels:
        app: janblaha-staging
    spec:
      containers:
      - name: janblaha-staging
        image: pofider/janblaha:0.2.0
        imagePullPolicy: Always
        ports:
        - containerPort: 1000   
        volumeMounts:
        - name: credentials
          mountPath: /app/twitter.keys.json
          subPath: twitter.keys.json
          readOnly: true
        resources:
          limits:
            memory: "64Mi"
            cpu: "0.1"
          requests:
            cpu: "0"
            memory: "0"
      volumes:
      - name: credentials
        secret:
          secretName: janblaha-credentials  
          items:
          - key: janblahaCredentials.json
            path: twitter.keys.json   
---          
apiVersion: v1
kind: Service
metadata:
  name: janblaha-staging
  labels:
    app: janblaha-staging
spec:
  selector:
    app: janblaha-staging
  ports:
    - name: http
      port: 1000          
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: janblaha-staging-ingress
  annotations:    
    kubernetes.io/ingress.class: nginx   
    ingress.kubernetes.io/ssl-redirect: "false"    
    nginx.ingress.kubernetes.io/limit-rps: "10"        
    nginx.ingress.kubernetes.io/server-snippet: |
      location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
      }    
spec:
  rules:  
  - host: janblaha.jsreport.cloud
    http:  
      paths:
      - path: /
        backend:
          serviceName: janblaha-staging
          servicePort: 1000      